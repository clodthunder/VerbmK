plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

def keyFile = rootProject.file("../key.gradle")
def keyPro = new Properties()

static def buildTime() {
    return new Date().format("yyyy_MM_dd_HH:mm")
}

android {
    compileSdkVersion rootProject.android.compileSdkVersion
    buildToolsVersion rootProject.android.buildToolsVersion

    defaultConfig {
        applicationId rootProject.android.app_applicationId
        minSdkVersion rootProject.android.minSdkVersion
        targetSdkVersion rootProject.android.targetSdkVersion
        versionCode rootProject.android.versionCode
        versionName rootProject.android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    //arouter
    kapt {
        arguments {
            arg("AROUTER_MODULE_NAME", project.getName())
        }
    }

    buildFeatures {
        //视图绑定
        viewBinding true
        //数据绑定
        dataBinding true
    }

    resourcePrefix "app_"
    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    buildTypes {
        release {
            minifyEnabled rootProject.android.multiDexEnabled
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    //不同渠道的签名，可以定义多个
    signingConfigs {
        release {
            storeFile keyFile
            storePassword keyPro.getProperty("spwd")
            keyAlias keyPro.getProperty("keyAlias")
            keyPassword keyPro.getProperty("kpwd")
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "争鸣_${rootProject.android.versionName}_${buildTime()}.apk"
        }
    }
}

dependencies {
    //moduel comm start
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation rootProject.depsLibs.appcompact
    implementation rootProject.depsLibs.design
    testImplementation rootProject.testLibs.junit
    androidTestImplementation rootProject.testLibs.ext_junit
    testImplementation rootProject.testLibs.espresso
    implementation rootProject.depsLibs.constraintlayout
//    moduel comm end

    //fragment 导航组件
    implementation 'androidx.navigation:navigation-runtime-ktx:2.3.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.1'

    //fragment
    implementation 'androidx.fragment:fragment-ktx:1.3.0-beta01'

    //集合组件
    implementation 'androidx.collection:collection-ktx:1.1.0'

    //生命周期组件
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.0-beta01'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.0-beta01'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0-beta01'
    implementation 'androidx.lifecycle:lifecycle-reactivestreams-ktx:2.3.0-beta01'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    //数据库组件
    implementation 'androidx.room:room-ktx:2.2.5'
    implementation 'androidx.sqlite:sqlite-ktx:2.1.0'

    //work 组件
    implementation 'androidx.work:work-runtime-ktx:2.5.0-beta01'

    //代码实例化布局
    implementation "org.jetbrains.anko:anko:$anko_version"

    //multidex
    implementation rootProject.depsLibs.multidex

    //rxjava库
    implementation rootProject.depsLibs.rxjava
    implementation rootProject.depsLibs.rxandroid

    //glide 图片库
    implementation rootProject.depsLibs.glide
    implementation rootProject.depsLibs.glide_okhttp
    kapt rootProject.depsLibs.glidecompiler

    //arouter库
    implementation rootProject.depsLibs.arouterapi
    kapt rootProject.depsLibs.aroutercompiler

    //toolbar
    implementation rootProject.depsLibs.immersionbar
    implementation rootProject.depsLibs.immersionbar_ktx

    //依赖私有库
    implementation project(':lib_common')
    implementation project(':basic_helper')
    implementation project(':basic_ui')
    implementation project(':busi_account')
    implementation project(':basic_widget')
}